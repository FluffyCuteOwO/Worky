"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var inline_query_result_1 = require("./inline_query_result");
var InlineQueryResultVideo = /** @class */ (function (_super) {
    __extends(InlineQueryResultVideo, _super);
    function InlineQueryResultVideo(params) {
        var _this = _super.call(this) || this;
        _this._type = params.type;
        _this._id = params.id;
        _this._videoUrl = params.videoUrl;
        _this._mimeType = params.mimeType;
        _this._thumbUrl = params.thumbUrl;
        _this._title = params.title;
        if (typeof params.caption === 'undefined' || params.caption === null) {
            _this._caption = null;
        }
        else {
            _this._caption = params.caption;
        }
        if (typeof params.parseMode === 'undefined' || params.parseMode === null) {
            _this._parseMode = null;
        }
        else {
            _this._parseMode = params.parseMode;
        }
        if (typeof params.videoWidth === 'undefined' || params.videoWidth === null) {
            _this._videoWidth = null;
        }
        else {
            _this._videoWidth = params.videoWidth;
        }
        if (typeof params.videoHeight === 'undefined' || params.videoHeight === null) {
            _this._videoHeight = null;
        }
        else {
            _this._videoHeight = params.videoHeight;
        }
        if (typeof params.videoDuration === 'undefined' || params.videoDuration === null) {
            _this._videoDuration = null;
        }
        else {
            _this._videoDuration = params.videoDuration;
        }
        if (typeof params.description === 'undefined' || params.description === null) {
            _this._description = null;
        }
        else {
            _this._description = params.description;
        }
        if (typeof params.replyMarkup === 'undefined' || params.replyMarkup === null) {
            _this._replyMarkup = null;
        }
        else {
            _this._replyMarkup = params.replyMarkup;
        }
        if (typeof params.inputMessageContent === 'undefined' || params.inputMessageContent === null) {
            _this._inputMessageContent = null;
        }
        else {
            _this._inputMessageContent = params.inputMessageContent;
        }
        return _this;
    }
    Object.defineProperty(InlineQueryResultVideo.prototype, "type", {
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultVideo.prototype, "id", {
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultVideo.prototype, "videoUrl", {
        get: function () {
            return this._videoUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultVideo.prototype, "mimeType", {
        get: function () {
            return this._mimeType;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultVideo.prototype, "thumbUrl", {
        get: function () {
            return this._thumbUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultVideo.prototype, "title", {
        get: function () {
            return this._title;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultVideo.prototype, "caption", {
        get: function () {
            return this._caption;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultVideo.prototype, "parseMode", {
        get: function () {
            return this._parseMode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultVideo.prototype, "videoWidth", {
        get: function () {
            return this._videoWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultVideo.prototype, "videoHeight", {
        get: function () {
            return this._videoHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultVideo.prototype, "videoDuration", {
        get: function () {
            return this._videoDuration;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultVideo.prototype, "description", {
        get: function () {
            return this._description;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultVideo.prototype, "replyMarkup", {
        get: function () {
            return this._replyMarkup;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultVideo.prototype, "inputMessageContent", {
        get: function () {
            return this._inputMessageContent;
        },
        enumerable: true,
        configurable: true
    });
    return InlineQueryResultVideo;
}(inline_query_result_1.default));
exports.default = InlineQueryResultVideo;
//# sourceMappingURL=inline_query_result_video.js.map