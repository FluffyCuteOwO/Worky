"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var inline_query_result_1 = require("./inline_query_result");
var InlineQueryResultCachedGif = /** @class */ (function (_super) {
    __extends(InlineQueryResultCachedGif, _super);
    function InlineQueryResultCachedGif(params) {
        var _this = _super.call(this) || this;
        _this._type = params.type;
        _this._id = params.id;
        _this._gifFileId = params.gifFileId;
        if (typeof params.title === 'undefined' || params.title === null) {
            _this._title = null;
        }
        else {
            _this._title = params.title;
        }
        if (typeof params.caption === 'undefined' || params.caption === null) {
            _this._caption = null;
        }
        else {
            _this._caption = params.caption;
        }
        if (typeof params.parseMode === 'undefined' || params.parseMode === null) {
            _this._parseMode = null;
        }
        else {
            _this._parseMode = params.parseMode;
        }
        if (typeof params.replyMarkup === 'undefined' || params.replyMarkup === null) {
            _this._replyMarkup = null;
        }
        else {
            _this._replyMarkup = params.replyMarkup;
        }
        if (typeof params.inputMessageContent === 'undefined' || params.inputMessageContent === null) {
            _this._inputMessageContent = null;
        }
        else {
            _this._inputMessageContent = params.inputMessageContent;
        }
        return _this;
    }
    Object.defineProperty(InlineQueryResultCachedGif.prototype, "type", {
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultCachedGif.prototype, "id", {
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultCachedGif.prototype, "gifFileId", {
        get: function () {
            return this._gifFileId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultCachedGif.prototype, "title", {
        get: function () {
            return this._title;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultCachedGif.prototype, "caption", {
        get: function () {
            return this._caption;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultCachedGif.prototype, "parseMode", {
        get: function () {
            return this._parseMode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultCachedGif.prototype, "replyMarkup", {
        get: function () {
            return this._replyMarkup;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InlineQueryResultCachedGif.prototype, "inputMessageContent", {
        get: function () {
            return this._inputMessageContent;
        },
        enumerable: true,
        configurable: true
    });
    return InlineQueryResultCachedGif;
}(inline_query_result_1.default));
exports.default = InlineQueryResultCachedGif;
//# sourceMappingURL=inline_query_result_cached_gif.js.map