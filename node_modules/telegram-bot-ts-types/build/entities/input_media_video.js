"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var input_media_1 = require("./input_media");
var InputMediaVideo = /** @class */ (function (_super) {
    __extends(InputMediaVideo, _super);
    function InputMediaVideo(params) {
        var _this = _super.call(this) || this;
        _this._type = params.type;
        _this._media = params.media;
        if (typeof params.thumb === 'undefined' || params.thumb === null) {
            _this._thumb = null;
        }
        else {
            _this._thumb = params.thumb;
        }
        if (typeof params.caption === 'undefined' || params.caption === null) {
            _this._caption = null;
        }
        else {
            _this._caption = params.caption;
        }
        if (typeof params.parseMode === 'undefined' || params.parseMode === null) {
            _this._parseMode = null;
        }
        else {
            _this._parseMode = params.parseMode;
        }
        if (typeof params.width === 'undefined' || params.width === null) {
            _this._width = null;
        }
        else {
            _this._width = params.width;
        }
        if (typeof params.height === 'undefined' || params.height === null) {
            _this._height = null;
        }
        else {
            _this._height = params.height;
        }
        if (typeof params.duration === 'undefined' || params.duration === null) {
            _this._duration = null;
        }
        else {
            _this._duration = params.duration;
        }
        if (typeof params.supportsStreaming === 'undefined' || params.supportsStreaming === null) {
            _this._supportsStreaming = null;
        }
        else {
            _this._supportsStreaming = params.supportsStreaming;
        }
        return _this;
    }
    Object.defineProperty(InputMediaVideo.prototype, "type", {
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputMediaVideo.prototype, "media", {
        get: function () {
            return this._media;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputMediaVideo.prototype, "thumb", {
        get: function () {
            return this._thumb;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputMediaVideo.prototype, "caption", {
        get: function () {
            return this._caption;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputMediaVideo.prototype, "parseMode", {
        get: function () {
            return this._parseMode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputMediaVideo.prototype, "width", {
        get: function () {
            return this._width;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputMediaVideo.prototype, "height", {
        get: function () {
            return this._height;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputMediaVideo.prototype, "duration", {
        get: function () {
            return this._duration;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputMediaVideo.prototype, "supportsStreaming", {
        get: function () {
            return this._supportsStreaming;
        },
        enumerable: true,
        configurable: true
    });
    return InputMediaVideo;
}(input_media_1.default));
exports.default = InputMediaVideo;
//# sourceMappingURL=input_media_video.js.map