"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SendPollParam = /** @class */ (function () {
    function SendPollParam(params) {
        this._chatId = params.chatId;
        this._question = params.question;
        this._options = params.options;
        if (typeof params.isAnonymous === 'undefined' || params.isAnonymous === null) {
            this._isAnonymous = null;
        }
        else {
            this._isAnonymous = params.isAnonymous;
        }
        if (typeof params.type === 'undefined' || params.type === null) {
            this._type = null;
        }
        else {
            this._type = params.type;
        }
        if (typeof params.allowsMultipleAnswers === 'undefined' || params.allowsMultipleAnswers === null) {
            this._allowsMultipleAnswers = null;
        }
        else {
            this._allowsMultipleAnswers = params.allowsMultipleAnswers;
        }
        if (typeof params.correctOptionId === 'undefined' || params.correctOptionId === null) {
            this._correctOptionId = null;
        }
        else {
            this._correctOptionId = params.correctOptionId;
        }
        if (typeof params.isClosed === 'undefined' || params.isClosed === null) {
            this._isClosed = null;
        }
        else {
            this._isClosed = params.isClosed;
        }
        if (typeof params.disableNotification === 'undefined' || params.disableNotification === null) {
            this._disableNotification = null;
        }
        else {
            this._disableNotification = params.disableNotification;
        }
        if (typeof params.replyToMessageId === 'undefined' || params.replyToMessageId === null) {
            this._replyToMessageId = null;
        }
        else {
            this._replyToMessageId = params.replyToMessageId;
        }
        if (typeof params.replyMarkup === 'undefined' || params.replyMarkup === null) {
            this._replyMarkup = null;
        }
        else {
            this._replyMarkup = params.replyMarkup;
        }
    }
    Object.defineProperty(SendPollParam.prototype, "chatId", {
        get: function () {
            return this._chatId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SendPollParam.prototype, "question", {
        get: function () {
            return this._question;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SendPollParam.prototype, "options", {
        get: function () {
            return this._options;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SendPollParam.prototype, "isAnonymous", {
        get: function () {
            return this._isAnonymous;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SendPollParam.prototype, "type", {
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SendPollParam.prototype, "allowsMultipleAnswers", {
        get: function () {
            return this._allowsMultipleAnswers;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SendPollParam.prototype, "correctOptionId", {
        get: function () {
            return this._correctOptionId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SendPollParam.prototype, "isClosed", {
        get: function () {
            return this._isClosed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SendPollParam.prototype, "disableNotification", {
        get: function () {
            return this._disableNotification;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SendPollParam.prototype, "replyToMessageId", {
        get: function () {
            return this._replyToMessageId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SendPollParam.prototype, "replyMarkup", {
        get: function () {
            return this._replyMarkup;
        },
        enumerable: true,
        configurable: true
    });
    return SendPollParam;
}());
exports.default = SendPollParam;
//# sourceMappingURL=send_poll_param.js.map